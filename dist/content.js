function c(r,e){let t=null;return(...s)=>{let n=()=>{t=null,r(...s)};t&&clearTimeout(t),t=setTimeout(n,e)}}function l(r){try{return new RegExp(r,"i")}catch(e){return console.error(`Invalid regex pattern: ${r}`,e),null}}var i={debug:(r,...e)=>{},info:(r,...e)=>{console.log(r,...e)},warn:(r,...e)=>{console.warn(r,...e)},error:(r,...e)=>{console.error(r,...e)}};var o=class{constructor(){this.pspConfig=null;this.exemptDomainsRegex=null}initialize(e){this.pspConfig=e,this.precompileRegexPatterns()}setExemptDomainsPattern(e){try{this.exemptDomainsRegex=new RegExp(e)}catch(t){i.error("Invalid exempt domains pattern:",t),this.exemptDomainsRegex=null}}detectPSP(e,t){if(!this.pspConfig||!this.exemptDomainsRegex)return i.warn("PSP detector not properly initialized"),null;if(!this.exemptDomainsRegex.test(e))return i.debug("URL is exempt from PSP detection:",e),null;let s=`${e}

${t}`;for(let n of this.pspConfig.psps)if(n.compiledRegex&&n.compiledRegex.test(s))return i.info("PSP detected:",n.name),n.name;return null}precompileRegexPatterns(){if(this.pspConfig)for(let e of this.pspConfig.psps){let t=l(e.regex);e.compiledRegex=t===null?void 0:t}}isInitialized(){return!!this.pspConfig&&!!this.exemptDomainsRegex}getPSPByName(e){return this.pspConfig&&this.pspConfig.psps.find(t=>t.name===e)||null}};var a=class{constructor(){this.observer=null;this.onMutationCallback=null;this.isObserving=!1}initialize(e,t=2e3){this.onMutationCallback=c(e,t),this.observer=new MutationObserver(s=>{if(!(!this.isObserving||!this.onMutationCallback)){for(let n of s)if(n.type==="childList"&&n.addedNodes.length>0){this.onMutationCallback();break}}})}startObserving(){if(!this.observer||this.isObserving)return;let e=()=>{if(!document.body){document.addEventListener("DOMContentLoaded",e,{once:!0});return}try{this.observer.observe(document.body,{childList:!0,subtree:!0}),this.isObserving=!0,i.debug("DOM observer started")}catch(t){i.error("Failed to start DOM observer:",t)}};e()}stopObserving(){if(!(!this.observer||!this.isObserving))try{this.observer.disconnect(),this.isObserving=!1,i.debug("DOM observer stopped")}catch(e){i.error("Failed to stop DOM observer:",e)}}cleanup(){this.stopObserving(),this.observer=null,this.onMutationCallback=null}isActive(){return this.isObserving}};var p=class{constructor(){this.pspDetected=!1;this.pspDetector=new o,this.domObserver=new a}async initialize(){try{await this.initializeExemptDomains(),await this.initializePSPConfig(),this.setupDOMObserver(),this.detectPSP()}catch(e){i.error("Failed to initialize content script:",e)}}async initializeExemptDomains(){try{let e=await this.sendMessage({action:"getExemptDomainsRegex"});e?.regex&&this.pspDetector.setExemptDomainsPattern(e.regex)}catch(e){i.error("Failed to initialize exempt domains:",e)}}async initializePSPConfig(){try{let e=await this.sendMessage({action:"getPspConfig"});e?.config&&this.pspDetector.initialize(e.config)}catch(e){i.error("Failed to initialize PSP config:",e)}}setupDOMObserver(){this.domObserver.initialize(()=>this.detectPSP()),this.domObserver.startObserving()}async detectPSP(){if(this.pspDetected||!this.pspDetector.isInitialized())return;let e=this.pspDetector.detectPSP(document.URL,document.documentElement.outerHTML);if(e)try{let t=await this.sendMessage({action:"getTabId"});t?.tabId&&await this.sendMessage({action:"detectPsp",data:{psp:e,tabId:t.tabId}}),this.pspDetected=!0,this.domObserver.stopObserving()}catch(t){i.error("Failed to report detected PSP:",t)}}sendMessage(e){return new Promise((t,s)=>{try{chrome.runtime.sendMessage(e,n=>{chrome.runtime.lastError?s(chrome.runtime.lastError):t(n)})}catch(n){s(n)}})}},g=new p;g.initialize().catch(r=>{i.error("Content script initialization failed:",r)});
//# sourceMappingURL=content.js.map
