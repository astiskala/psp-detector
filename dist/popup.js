function c(n){try{return new URL(n).toString()}catch(e){return console.error("Invalid URL:",e),"#"}}var o={debug:(n,...e)=>{},info:(n,...e)=>{console.log(n,...e)},warn:(n,...e)=>{console.warn(n,...e)},error:(n,...e)=>{console.error(n,...e)}};var s=class{constructor(){this.elements={},this.initializeDOMElements()}initializeDOMElements(){["name","description","notice","url","image"].forEach(r=>{let t=document.getElementById(`psp-${r}`);if(!t)throw new Error(`Element psp-${r} not found`);this.elements[r]=t})}updatePSPDisplay(e){try{this.updateTextContent("name",e.name),this.updateTextContent("description",e.summary),this.updateNoticeSection(e.notice),this.updateLearnMoreLink(e.url),this.updateImage(e.image,e.name)}catch(r){o.error("Failed to update PSP display:",r),this.showError()}}showNoPSPDetected(){this.updateTextContent("name","No PSP detected"),this.updateTextContent("description","The Payment Service Provider could not be determined. Please ensure you have navigated to the website's checkout page."),this.elements.notice.style.display="none",this.updateTextContent("notice",""),this.updateLearnMoreLink("mailto:psp-detector@adamstiskala.com","Suggest Improvement"),this.updateImage("default","No PSP detected")}showError(){this.updateTextContent("name","Error"),this.updateTextContent("description","An error occurred while loading PSP information. Please try again later."),this.elements.notice.style.display="none",this.updateImage("default","Error")}updateTextContent(e,r){this.elements[e]&&(this.elements[e].textContent=r)}updateNoticeSection(e){e?(this.elements.notice.style.display="block",this.updateTextContent("notice",e)):(this.elements.notice.style.display="none",this.updateTextContent("notice",""))}updateLearnMoreLink(e,r="Learn More"){let t=document.createElement("a");t.href=c(e),t.textContent=r,t.target="_blank",t.rel="noopener noreferrer",this.elements.url.replaceChildren(t)}updateImage(e,r){let t=this.elements.image;t.src=chrome.runtime.getURL(`images/${e}_128.png`),t.alt=`${r} logo`}};var a=class{constructor(){this.ui=new s}async initialize(){try{let e=await this.getDetectedPSP();if(!e){this.ui.showNoPSPDetected();return}let t=(await this.getPSPConfig()).psps.find(i=>i.name===e);t?this.ui.updatePSPDisplay(t):(o.error("PSP config not found for:",e),this.ui.showNoPSPDetected())}catch(e){o.error("Failed to initialize popup:",e),this.ui.showError()}}async getDetectedPSP(){try{return(await this.sendMessage({action:"getPsp"})).psp}catch(e){return o.error("Failed to get detected PSP:",e),null}}async getPSPConfig(){let e=await fetch(chrome.runtime.getURL("psp-config.json"));if(!e.ok)throw new Error(`Failed to fetch PSP config: ${e.status}`);return e.json()}sendMessage(e){return new Promise((r,t)=>{try{chrome.runtime.sendMessage(e,i=>{chrome.runtime.lastError?t(chrome.runtime.lastError):r(i)})}catch(i){t(i)}})}};document.addEventListener("DOMContentLoaded",()=>{new a().initialize().catch(e=>{o.error("Popup initialization failed:",e)})});
//# sourceMappingURL=popup.js.map
